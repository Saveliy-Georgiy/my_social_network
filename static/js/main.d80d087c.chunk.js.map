{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/avatar1.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/logo1.png","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/background.jpg","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","s","header","logo","src","alt","logoName","console","log","Navbar","nav","item","to","activeClassName","activeLink","active","Post","props","avatar1","message","likes","MyPosts","postsBlock","newPost","name","id","cols","rows","posts","ProfileInfo","background","descriptionBlock","Profile","DialogItem","path","dialog","Message","Dialogs","dialogs","dialogsItems","messages","News","news","Music","music","Settings","settings","App","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d80d087c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3ArgD\",\"item\":\"Navbar_item__3Wkg-\",\"activeLink\":\"Navbar_activeLink__1u0iX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2bLVY\",\"dialogsItems\":\"Dialogs_dialogsItems__2a6S3\",\"active\":\"Dialogs_active__2FcGP\",\"dialog\":\"Dialogs_dialog__2ueeB\",\"messages\":\"Dialogs_messages__1HM0Z\",\"message\":\"Dialogs_message__g7rce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3AJts\",\"logo\":\"Header_logo__zRnik\",\"logoName\":\"Header_logoName__2Xsls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__ASz1F\",\"postsBlock\":\"MyPosts_postsBlock__2lLk5\",\"newPost\":\"MyPosts_newPost__zermO\"};","module.exports = __webpack_public_path__ + \"static/media/avatar1.1a286469.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2uKtW\",\"background\":\"ProfileInfo_background__2ooGP\"};","module.exports = __webpack_public_path__ + \"static/media/logo1.7901018a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__AjLsH\"};","module.exports = __webpack_public_path__ + \"static/media/background.dfac1092.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1SVl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__1k4N_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__2P-29\"};","import React from 'react';\r\nimport logo from \"./logo1.png\";\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n\r\n        <header className={s.header}>\r\n            <div className={s.logo}>\r\n                <div>\r\n                    <img src={logo} alt=\"logo\"/>\r\n                </div>\r\n                <div className={s.logoName}>\r\n                    <span>CACTUSME</span>\r\n                </div>\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconsole.log(s);\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className = {s.nav}>\r\n            <div className = {s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className = {`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className = {s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className = {s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className = {s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport avatar1 from './avatar1.jpg'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n                <div className = {s.item}>\r\n                    <img src={avatar1} alt=\"avatar\"/>\r\n                    {props.message}\r\n                    <div>\r\n                    <span>like</span> {props.likes}\r\n                    </div>\r\n                </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport avatar1 from './Post/avatar1.jpg'\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n            </div>\r\n            <div className={s.newPost}>\r\n            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"5\"></textarea>\r\n            </div>\r\n            <div><button>Add post</button></div>\r\n            <div><button>Remove</button></div>\r\n            <div>New post</div>\r\n            <div className = {s.posts}>\r\n                <Post message='Hi, how are you?' likes = '15'/>\r\n                <Post message=\"It's my first post\" likes = '20'/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport background from './background.jpg'\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.background}>\r\n                <img src={background}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = () => {\r\n    return(\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPosts />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog  + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n};\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n           <div className={s.dialogsItems}>\r\n               <DialogItem name=\"Saveliy\" id=\"1\"/>               <DialogItem name=\"Dmitriy\" id=\"2\"/>\r\n               <DialogItem name=\"Artem\" id=\"3\"/>\r\n               <DialogItem name=\"Alexei\" id=\"4\"/>\r\n               <DialogItem name=\"Vadim\" id=\"5\"/>\r\n               <DialogItem name=\"Anton\" id=\"6\"/>\r\n           </div>\r\n            <div className={s.messages}>\r\n                <Message message=\"Hi\"/>\r\n                <Message message=\"How Are you?\"/>\r\n                <Message message=\"Yo\"/>\r\n                <Message message=\"Yo\"/>\r\n                <Message message=\"Yo\"/>\r\n            </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\"\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' component={Dialogs}/>\n                    <Route path='/profile' component={Profile}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n\n                </div>\n\n            </div>\n        </BrowserRouter>\n    );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}